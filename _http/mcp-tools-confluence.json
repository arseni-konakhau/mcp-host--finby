[
    {
        "name": "confluence_search",
        "description": "Search Confluence content using simple terms or CQL.\n\nArgs:\n    ctx: The FastMCP context.\n    query: Search query - can be simple text or a CQL query string.\n    limit: Maximum number of results (1-50).\n    spaces_filter: Comma-separated list of space keys to filter by.\n\nReturns:\n    JSON string representing a list of simplified Confluence page objects.\n",
        "inputSchema": {
            "properties": {
                "query": {
                    "description": "Search query - can be either a simple text (e.g. 'project documentation') or a CQL query string. Simple queries use 'siteSearch' by default, to mimic the WebUI search, with an automatic fallback to 'text' search if not supported. Examples of CQL:\n- Basic search: 'type=page AND space=DEV'\n- Personal space search: 'space=\"~username\"' (note: personal space keys starting with ~ must be quoted)\n- Search by title: 'title~\"Meeting Notes\"'\n- Use siteSearch: 'siteSearch ~ \"important concept\"'\n- Use text search: 'text ~ \"important concept\"'\n- Recent content: 'created >= \"2023-01-01\"'\n- Content with specific label: 'label=documentation'\n- Recently modified content: 'lastModified > startOfMonth(\"-1M\")'\n- Content modified this year: 'creator = currentUser() AND lastModified > startOfYear()'\n- Content you contributed to recently: 'contributor = currentUser() AND lastModified > startOfWeek()'\n- Content watched by user: 'watcher = \"user@domain.com\" AND type = page'\n- Exact phrase in content: 'text ~ \"\\\"Urgent Review Required\\\"\" AND label = \"pending-approval\"'\n- Title wildcards: 'title ~ \"Minutes*\" AND (space = \"HR\" OR space = \"Marketing\")'\nNote: Special identifiers need proper quoting in CQL: personal space keys (e.g., \"~username\"), reserved words, numeric IDs, and identifiers with special characters.",
                    "title": "Query",
                    "type": "string"
                },
                "limit": {
                    "default": 10,
                    "description": "Maximum number of results (1-50)",
                    "maximum": 50,
                    "minimum": 1,
                    "title": "Limit",
                    "type": "integer"
                },
                "spaces_filter": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "description": "(Optional) Comma-separated list of space keys to filter results by. Overrides the environment variable CONFLUENCE_SPACES_FILTER if provided. Use empty string to disable filtering.",
                    "title": "Spaces Filter"
                }
            },
            "required": [
                "query"
            ],
            "type": "object"
        }
    },
    {
        "name": "confluence_get_page",
        "description": "Get content of a specific Confluence page by its ID, or by its title and space key.\n\nArgs:\n    ctx: The FastMCP context.\n    page_id: Confluence page ID. If provided, 'title' and 'space_key' are ignored.\n    title: The exact title of the page. Must be used with 'space_key'.\n    space_key: The key of the space. Must be used with 'title'.\n    include_metadata: Whether to include page metadata.\n    convert_to_markdown: Convert content to markdown (true) or keep raw HTML (false).\n\nReturns:\n    JSON string representing the page content and/or metadata, or an error if not found or parameters are invalid.\n",
        "inputSchema": {
            "properties": {
                "page_id": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "description": "Confluence page ID (numeric ID, can be found in the page URL). For example, in the URL 'https://example.atlassian.net/wiki/spaces/TEAM/pages/123456789/Page+Title', the page ID is '123456789'. Provide this OR both 'title' and 'space_key'. If page_id is provided, title and space_key will be ignored.",
                    "title": "Page Id"
                },
                "title": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "description": "The exact title of the Confluence page. Use this with 'space_key' if 'page_id' is not known.",
                    "title": "Title"
                },
                "space_key": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "description": "The key of the Confluence space where the page resides (e.g., 'DEV', 'TEAM'). Required if using 'title'.",
                    "title": "Space Key"
                },
                "include_metadata": {
                    "default": true,
                    "description": "Whether to include page metadata such as creation date, last update, version, and labels.",
                    "title": "Include Metadata",
                    "type": "boolean"
                },
                "convert_to_markdown": {
                    "default": true,
                    "description": "Whether to convert page to markdown (true) or keep it in raw HTML format (false). Raw HTML can reveal macros (like dates) not visible in markdown, but CAUTION: using HTML significantly increases token usage in AI responses.",
                    "title": "Convert To Markdown",
                    "type": "boolean"
                }
            },
            "type": "object"
        }
    },
    {
        "name": "confluence_get_page_children",
        "description": "Get child pages of a specific Confluence page.\n\nArgs:\n    ctx: The FastMCP context.\n    parent_id: The ID of the parent page.\n    expand: Fields to expand.\n    limit: Maximum number of child pages.\n    include_content: Whether to include page content.\n    convert_to_markdown: Convert content to markdown if include_content is true.\n    start: Starting index for pagination.\n\nReturns:\n    JSON string representing a list of child page objects.\n",
        "inputSchema": {
            "properties": {
                "parent_id": {
                    "description": "The ID of the parent page whose children you want to retrieve",
                    "title": "Parent Id",
                    "type": "string"
                },
                "expand": {
                    "default": "version",
                    "description": "Fields to expand in the response (e.g., 'version', 'body.storage')",
                    "title": "Expand",
                    "type": "string"
                },
                "limit": {
                    "default": 25,
                    "description": "Maximum number of child pages to return (1-50)",
                    "maximum": 50,
                    "minimum": 1,
                    "title": "Limit",
                    "type": "integer"
                },
                "include_content": {
                    "default": false,
                    "description": "Whether to include the page content in the response",
                    "title": "Include Content",
                    "type": "boolean"
                },
                "convert_to_markdown": {
                    "default": true,
                    "description": "Whether to convert page content to markdown (true) or keep it in raw HTML format (false). Only relevant if include_content is true.",
                    "title": "Convert To Markdown",
                    "type": "boolean"
                },
                "start": {
                    "default": 0,
                    "description": "Starting index for pagination (0-based)",
                    "minimum": 0,
                    "title": "Start",
                    "type": "integer"
                }
            },
            "required": [
                "parent_id"
            ],
            "type": "object"
        }
    },
    {
        "name": "confluence_get_comments",
        "description": "Get comments for a specific Confluence page.\n\nArgs:\n    ctx: The FastMCP context.\n    page_id: Confluence page ID.\n\nReturns:\n    JSON string representing a list of comment objects.\n",
        "inputSchema": {
            "properties": {
                "page_id": {
                    "description": "Confluence page ID (numeric ID, can be parsed from URL, e.g. from 'https://example.atlassian.net/wiki/spaces/TEAM/pages/123456789/Page+Title' -> '123456789')",
                    "title": "Page Id",
                    "type": "string"
                }
            },
            "required": [
                "page_id"
            ],
            "type": "object"
        }
    },
    {
        "name": "confluence_get_labels",
        "description": "Get labels for a specific Confluence page.\n\nArgs:\n    ctx: The FastMCP context.\n    page_id: Confluence page ID.\n\nReturns:\n    JSON string representing a list of label objects.\n",
        "inputSchema": {
            "properties": {
                "page_id": {
                    "description": "Confluence page ID (numeric ID, can be parsed from URL, e.g. from 'https://example.atlassian.net/wiki/spaces/TEAM/pages/123456789/Page+Title' -> '123456789')",
                    "title": "Page Id",
                    "type": "string"
                }
            },
            "required": [
                "page_id"
            ],
            "type": "object"
        }
    },
    {
        "name": "confluence_add_label",
        "description": "Add label to an existing Confluence page.\n\nArgs:\n    ctx: The FastMCP context.\n    page_id: The ID of the page to update.\n    name: The name of the label.\n\nReturns:\n    JSON string representing the updated list of label objects for the page.\n\nRaises:\n    ValueError: If in read-only mode or Confluence client is unavailable.\n",
        "inputSchema": {
            "properties": {
                "page_id": {
                    "description": "The ID of the page to update",
                    "title": "Page Id",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the label",
                    "title": "Name",
                    "type": "string"
                }
            },
            "required": [
                "page_id",
                "name"
            ],
            "type": "object"
        }
    },
    {
        "name": "confluence_create_page",
        "description": "Create a new Confluence page.\n\nArgs:\n    ctx: The FastMCP context.\n    space_key: The key of the space.\n    title: The title of the page.\n    content: The content of the page (format depends on content_format).\n    parent_id: Optional parent page ID.\n    content_format: The format of the content ('markdown', 'wiki', or 'storage').\n    enable_heading_anchors: Whether to enable heading anchors (markdown only).\n\nReturns:\n    JSON string representing the created page object.\n\nRaises:\n    ValueError: If in read-only mode, Confluence client is unavailable, or invalid content_format.\n",
        "inputSchema": {
            "properties": {
                "space_key": {
                    "description": "The key of the space to create the page in (usually a short uppercase code like 'DEV', 'TEAM', or 'DOC')",
                    "title": "Space Key",
                    "type": "string"
                },
                "title": {
                    "description": "The title of the page",
                    "title": "Title",
                    "type": "string"
                },
                "content": {
                    "description": "The content of the page. Format depends on content_format parameter. Can be Markdown (default), wiki markup, or storage format",
                    "title": "Content",
                    "type": "string"
                },
                "parent_id": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "description": "(Optional) parent page ID. If provided, this page will be created as a child of the specified page",
                    "title": "Parent Id"
                },
                "content_format": {
                    "default": "markdown",
                    "description": "(Optional) The format of the content parameter. Options: 'markdown' (default), 'wiki', or 'storage'. Wiki format uses Confluence wiki markup syntax",
                    "title": "Content Format",
                    "type": "string"
                },
                "enable_heading_anchors": {
                    "default": false,
                    "description": "(Optional) Whether to enable automatic heading anchor generation. Only applies when content_format is 'markdown'",
                    "title": "Enable Heading Anchors",
                    "type": "boolean"
                }
            },
            "required": [
                "space_key",
                "title",
                "content"
            ],
            "type": "object"
        }
    },
    {
        "name": "confluence_update_page",
        "description": "Update an existing Confluence page.\n\nArgs:\n    ctx: The FastMCP context.\n    page_id: The ID of the page to update.\n    title: The new title of the page.\n    content: The new content of the page (format depends on content_format).\n    is_minor_edit: Whether this is a minor edit.\n    version_comment: Optional comment for this version.\n    parent_id: Optional new parent page ID.\n    content_format: The format of the content ('markdown', 'wiki', or 'storage').\n    enable_heading_anchors: Whether to enable heading anchors (markdown only).\n\nReturns:\n    JSON string representing the updated page object.\n\nRaises:\n    ValueError: If Confluence client is not configured, available, or invalid content_format.\n",
        "inputSchema": {
            "properties": {
                "page_id": {
                    "description": "The ID of the page to update",
                    "title": "Page Id",
                    "type": "string"
                },
                "title": {
                    "description": "The new title of the page",
                    "title": "Title",
                    "type": "string"
                },
                "content": {
                    "description": "The new content of the page. Format depends on content_format parameter",
                    "title": "Content",
                    "type": "string"
                },
                "is_minor_edit": {
                    "default": false,
                    "description": "Whether this is a minor edit",
                    "title": "Is Minor Edit",
                    "type": "boolean"
                },
                "version_comment": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "description": "Optional comment for this version",
                    "title": "Version Comment"
                },
                "parent_id": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "description": "Optional the new parent page ID",
                    "title": "Parent Id"
                },
                "content_format": {
                    "default": "markdown",
                    "description": "(Optional) The format of the content parameter. Options: 'markdown' (default), 'wiki', or 'storage'. Wiki format uses Confluence wiki markup syntax",
                    "title": "Content Format",
                    "type": "string"
                },
                "enable_heading_anchors": {
                    "default": false,
                    "description": "(Optional) Whether to enable automatic heading anchor generation. Only applies when content_format is 'markdown'",
                    "title": "Enable Heading Anchors",
                    "type": "boolean"
                }
            },
            "required": [
                "page_id",
                "title",
                "content"
            ],
            "type": "object"
        }
    },
    {
        "name": "confluence_delete_page",
        "description": "Delete an existing Confluence page.\n\nArgs:\n    ctx: The FastMCP context.\n    page_id: The ID of the page to delete.\n\nReturns:\n    JSON string indicating success or failure.\n\nRaises:\n    ValueError: If Confluence client is not configured or available.\n",
        "inputSchema": {
            "properties": {
                "page_id": {
                    "description": "The ID of the page to delete",
                    "title": "Page Id",
                    "type": "string"
                }
            },
            "required": [
                "page_id"
            ],
            "type": "object"
        }
    },
    {
        "name": "confluence_add_comment",
        "description": "Add a comment to a Confluence page.\n\nArgs:\n    ctx: The FastMCP context.\n    page_id: The ID of the page to add a comment to.\n    content: The comment content in Markdown format.\n\nReturns:\n    JSON string representing the created comment.\n\nRaises:\n    ValueError: If in read-only mode or Confluence client is unavailable.\n",
        "inputSchema": {
            "properties": {
                "page_id": {
                    "description": "The ID of the page to add a comment to",
                    "title": "Page Id",
                    "type": "string"
                },
                "content": {
                    "description": "The comment content in Markdown format",
                    "title": "Content",
                    "type": "string"
                }
            },
            "required": [
                "page_id",
                "content"
            ],
            "type": "object"
        }
    },
    {
        "name": "confluence_search_user",
        "description": "Search Confluence users using CQL.\n\nArgs:\n    ctx: The FastMCP context.\n    query: Search query - a CQL query string for user search.\n    limit: Maximum number of results (1-50).\n\nReturns:\n    JSON string representing a list of simplified Confluence user search result objects.\n",
        "inputSchema": {
            "properties": {
                "query": {
                    "description": "Search query - a CQL query string for user search. Examples of CQL:\n- Basic user lookup by full name: 'user.fullname ~ \"First Last\"'\nNote: Special identifiers need proper quoting in CQL: personal space keys (e.g., \"~username\"), reserved words, numeric IDs, and identifiers with special characters.",
                    "title": "Query",
                    "type": "string"
                },
                "limit": {
                    "default": 10,
                    "description": "Maximum number of results (1-50)",
                    "maximum": 50,
                    "minimum": 1,
                    "title": "Limit",
                    "type": "integer"
                }
            },
            "required": [
                "query"
            ],
            "type": "object"
        }
    }
]